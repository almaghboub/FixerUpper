==> Cloning from https://github.com/almaghboub/FixerUpper
==> Checking out commit f2604cc41df8a976170d64eb3822c35eee004251 in branch main
==> Using Node.js version 22.16.0 (default)
==> Docs on specifying a Node.js version: https://render.com/docs/node-version
==> Running build command 'npm install && npm run build'...
added 482 packages, and audited 483 packages in 7s
65 packages are looking for funding
  run `npm fund` for details
8 vulnerabilities (3 low, 5 moderate)
To address issues that do not require attention, run:
  npm audit fix
To address all issues (including breaking changes), run:
  npm audit fix --force
Run `npm audit` for details.
> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
vite v5.4.20 building for production...
transforming...
Browserslist: browsers data (caniuse-lite) is 11 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
âœ“ 1865 modules transformed.
rendering chunks...
computing gzip size...
../dist/public/index.html                       1.95 kB â”‚ gzip:   0.74 kB
../dist/public/assets/lynx-logo-BsCzvO-M.png   53.76 kB
../dist/public/assets/index-B8KnZTZs.css       66.27 kB â”‚ gzip:  11.58 kB
../dist/public/assets/index-Bvos7mOb.js       711.66 kB â”‚ gzip: 200.16 kB
(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
âœ“ built in 3.93s
  dist/index.js  46.5kb
âš¡ Done in 6ms
==> Uploading build...
==> Uploaded in 5.5s. Compression took 2.9s
==> Build successful ðŸŽ‰
==> Deploying...
==> Running 'npm run start'
> rest-express@1.0.0 start
> NODE_ENV=production node dist/index.js
file:///opt/render/project/src/node_modules/@neondatabase/serverless/index.mjs:1524
queryCallback:u,resultCallback:c,authToken:h}={}){if(!r)throw new Error("No data\
                                                              ^
Error: No database connection string was provided to `neon()`. Perhaps an environment variable has not been set?
    at neon (file:///opt/render/project/src/node_modules/@neondatabase/serverless/index.mjs:1524:63)
    at file:///opt/render/project/src/dist/index.js:167:14
    at ModuleJob.run (node:internal/modules/esm/module_job:274:25)
    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:644:26)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
Node.js v22.16.0
==> Exited with status 1
==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys
==> Running 'npm run start'
> rest-express@1.0.0 start
> NODE_ENV=production node dist/index.js
file:///opt/render/project/src/node_modules/@neondatabase/serverless/index.mjs:1524
queryCallback:u,resultCallback:c,authToken:h}={}){if(!r)throw new Error("No data\
                                                              ^
Error: No database connection string was provided to `neon()`. Perhaps an environment variable has not been set?
    at neon (file:///opt/render/project/src/node_modules/@neondatabase/serverless/index.mjs:1524:63)
    at file:///opt/render/project/src/dist/index.js:167:14
    at ModuleJob.run (node:internal/modules/esm/module_job:274:25)
    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:644:26)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
Node.js v22.16.0
